#labels Featured
#sidebar TableOfContents
	
==안녕 스밍고!==
지금부터 기본적인 'Hello World' 프로그램을 하나 만들어 보겠습니다. 
우선 아무 편집기나 골라 실행시키신 후 다음 코드를 입력합니다.
{{{
"안녕 스밍고!" print
}}}
그런 다음 이 텍스트 파일을 *안녕.smg* 로 저장합니다.
그후 터미널에 '{{{smingGo 안녕}}}'을 입력하시면 화면에 다음과 같은 문자열이 출력됩니다!
{{{ 
안녕 스밍고! 
}}}
이처럼 스밍고에서는 모든 자료를 일단 기본 스택에 저장합니다. 만일 아래와 같은 코드를 입력한다면
{{{
1 2 3 4
}}}
스밍고는 문자와 문자 사이의 띄어쓰기를 판별한 후, 스택에 1,2,3,4 순으로 자료를 넣습니다. <p><p>이때 *pstack* 이라는 단어를 입력하면 다음과 같이 스택에 어떤 자료가 있는지 볼 수 있습니다!!!
{{{
1 2 3 4 pstack
}}}

{{{
스택 자료 ( 4 ) :
int : 1
int : 2
int : 3
int : 4
}}}
여기서 중요한 것은 이제 이 자료들을 사용할 단어를 입력하면 스밍고는 스택에서 FIFO 방식으로 자료를 반환합니다.<p><p>
{{{
1 2 3 4 println pstack
}}}

즉 화면에 4가 보이게 되고 스택에는 1,2,3이 남아있게 됩니다.

{{{
4
스택 자료 ( 3 ) :
int : 1
int : 2
int : 3
}}}

이처럼 스밍고는 기본적으로 후위표기법을 사용하여 프로그래밍을 진행합니다.<p><p>
그래서 '1+2+3'과 같은 중위표기법 계산식도 아래와 같은 코드로 입력해야 하죠.
{{{
1 2 + 3 + pstack
}}}

위의 코드를 입력하시면 아래와 같이 6이라는 값이 스택에 들어 있음을 알수있습니다.
{{{
스택 자료 ( 1 ) :
int : 6
}}}

===어떤 자료형이 있나?===
스밍고에서는 기본적으로 모든 것이 자료가 될 수 있습니다. <p><p>하지만 일단은 기본적으로 자료로 쓰는 것은 상징,숫자,문자열이 존재하며 <p><p>또한 기본 자료형들을 묶어줄 람다(Lamda)라는 재밌는 구조형 자료를 제공합니다.

{{{
 317 "문자열" ( ) #상징
}}}

{{{
스택 자료 ( 1 ) :
int : 6
}}}

====상징(Symbol)====

'*#*' 이라는 단어가 앞에 있으면 만들수 있는 기본 자료형으로, 다양한 범위로 사용됩니다.<p><p>
상징은 그자체로 하나의 독립된 자료입니다.<p><p>일반적으로 사람이 사용하는 문자열(String)과 달리 상징은 컴퓨터가 사용하는 구분을 위한 기표로써 문자열보다 훨씬 가볍습니다.<p><p> 그래서 앞으로 살펴보실테지만 변수의 이름으로 쓰거나 그외 태깅 및 여러가지에 쓰이는 기본 자료입니다.

{{{ 
#상징 pstack
}}}
{{{
스택 자료 ( 1 ) :
sym : 상징
}}}

====숫자(Integer or Float)====
스밍고에서는 실수형(Integer)과 정수형(Float) 둘다를 지원합니다. 일반적으로 이들을 잘 구별하지 않지만 <p><p>만일 계산식에서 실수형과 정수형을 같이 계산시 실수형이 나오도록 해놓았습니다.<p><p> 그래서 이점 유의하시기 바랍니다.(물론 서로 변환이 가능합니다.)
{{{
1 2.0 + pstack
}}}
{{{
스택 자료 ( 1 ) :
float : 3.0
}}}

====문자열(String)====
"문자열"이라는 형태로 *"* 단어를 이용하여 문자열을 만듭니다. <p><p>스밍고에서는 앞서 설명드렸듯이 컴퓨터가 사용하는 기표를 '상징'으로 사람이 사용하는 기표를 '문자열'로 다룹니다!<p><p>
{{{
"이것은 문자열입니다. 여러분!" pstack
}}}

{{{
스택 자료 ( 1 ) :
str : "이것은 문자열입니다. 여러분!"
}}}

====람다(Lamda)====
스밍고에서는 기본 자료들을 묶어줄 특수한 구조형 자료로 람다(Lamda)입니다. <p><p>람다라는 개념은 제가 만든 개념으로 리스프 언어의 Lambda 개념을 차용해서 구현해본 구조형 자료입니다.<p>(Lambda와 Lamda는 조금 다른 개념이므로 혼돈하지 마시길!)<p><p>
뒤에 장에서 구체적으로 다루고 이번 장에서는 단지 맛보기로 '여러 자료형을 담을 수 있는 자료형'이라고 생각하시면 될것같습니다!<p><p>
람다는 '*(*' 단어와 '*)*' 단어 사이에 자료들을 모조리 연결 목록(Linked List)형 자료로 만들어냅니다.<p><p> 아래 코드를 입력하시면 스택에 람다가 저장되는 것을 보실수 있습니다.

{{{
( 1 "문자열" ( ) )  pstack
}}}

{{{
스택 자료 ( 1 ) :
Lamda : ( 1 "문자열" ( ) )
}}}